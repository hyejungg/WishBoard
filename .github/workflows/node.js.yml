# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: ServerDeploy

on:
  push:
    branches: main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    # 브랜치에 checkout해 코드를 가져온다
      - name: Checkout source code. # node 버전을 확인한다.
        uses: actions/checkout@v2
      - name: Check Node v
        run: node -v
      # 직업폴더를 설정 한 수 의존 파일을 설치한다.
      - name: Install Dependencies
        working-directory: ./node_server
        run: yarn install --frozen-lockfile
      # Build한다
      - name: Build # Fastify Build and Start
        working-directory: ./node_server
        run: yarn build
      # S3에 올리기 전에 zip으로 압축한다.
      - name: zip create
        working-directory: ./server/dist
        run: zip -qq -r ./server.zip .
        shell: bash
     # AWS 사용자 정보를 입력한다.
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      # S3에 올린다.
      - name: Upload to S3 # Upload build file to S3
        working-directory: ./server
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      # aws s3 cp --region ap-northeast-2 **./server.zip** s3://**S3버킷이름/S3에서-업로드하고자-하는-폴더**/**server.zip** 원하는 이름대로 수정한다.
        run: |
          aws s3 cp --region ap-northeast-2 ./server.zip s3://mapclone-server/server/server.zip
      - name: Deploy # Deploy to EC2
        working-directory: ./server
        run: aws deploy create-deployment
          --application-name wishboard_cicd
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name wishboard_deploy
          --s3-location bucket=aws-codedeploy-ap-northeast-2,key=server/server.zip,bundleType=zip
